# getConfigResponse

## OpenAPI Specification

```yaml
openapi: 3.0.1
info:
  title: ''
  description: ''
  version: 1.0.0
paths: {}
components:
  schemas:
    getConfigResponse:
      $ref: '#/components/schemas/Config'
      x-apifox-folder: ''
    TLSOptions:
      properties:
        cipherSuites:
          items:
            type: string
          type: array
          x-go-name: CipherSuites
        maxVersion:
          type: string
          x-go-name: MaxVersion
        minVersion:
          type: string
          x-go-name: MinVersion
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - cipherSuites
        - maxVersion
        - minVersion
      x-apifox-folder: ''
    TLSNodeConfig:
      properties:
        options: &ref_0
          $ref: '#/components/schemas/TLSOptions'
        secure:
          type: boolean
          x-go-name: Secure
        serverName:
          type: string
          x-go-name: ServerName
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - options
        - secure
        - serverName
      x-apifox-folder: ''
    TLSConfig:
      properties:
        caFile:
          type: string
          x-go-name: CAFile
        certFile:
          type: string
          x-go-name: CertFile
        commonName:
          type: string
          x-go-name: CommonName
        keyFile:
          type: string
          x-go-name: KeyFile
        options: *ref_0
        organization:
          type: string
          x-go-name: Organization
        secure:
          type: boolean
          x-go-name: Secure
        serverName:
          type: string
          x-go-name: ServerName
        validity: &ref_1
          $ref: '#/components/schemas/Duration'
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - caFile
        - certFile
        - commonName
        - keyFile
        - options
        - organization
        - secure
        - serverName
        - validity
      x-apifox-folder: ''
    TCPRecorder:
      properties:
        addr:
          type: string
          x-go-name: Addr
        timeout: *ref_1
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - timeout
      x-apifox-folder: ''
    SockOptsConfig:
      properties:
        mark:
          format: int64
          type: integer
          x-go-name: Mark
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - mark
      x-apifox-folder: ''
    ServiceConfig:
      properties:
        addr:
          type: string
          x-go-name: Addr
        admission:
          type: string
          x-go-name: Admission
        admissions:
          items:
            type: string
          type: array
          x-go-name: Admissions
        bypass:
          type: string
          x-go-name: Bypass
        bypasses:
          items:
            type: string
          type: array
          x-go-name: Bypasses
        climiter:
          type: string
          x-go-name: CLimiter
        forwarder:
          $ref: '#/components/schemas/ForwarderConfig'
        handler:
          $ref: '#/components/schemas/HandlerConfig'
        hosts:
          type: string
          x-go-name: Hosts
        interface:
          description: DEPRECATED by metadata.interface since beta.5
          type: string
          x-go-name: Interface
        limiter:
          type: string
          x-go-name: Limiter
        listener:
          $ref: '#/components/schemas/ListenerConfig'
        metadata:
          additionalProperties:
            type: string
          type: object
          x-go-name: Metadata
          x-apifox-orders: []
        name:
          type: string
          x-go-name: Name
        recorders:
          items:
            $ref: '#/components/schemas/RecorderObject'
          type: array
          x-go-name: Recorders
        resolver:
          type: string
          x-go-name: Resolver
        rlimiter:
          type: string
          x-go-name: RLimiter
        sockopts: &ref_3
          $ref: '#/components/schemas/SockOptsConfig'
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - admission
        - admissions
        - bypass
        - bypasses
        - climiter
        - forwarder
        - handler
        - hosts
        - interface
        - limiter
        - listener
        - metadata
        - name
        - recorders
        - resolver
        - rlimiter
        - sockopts
      x-apifox-folder: ''
    SelectorConfig:
      properties:
        failTimeout: *ref_1
        maxFails:
          format: int64
          type: integer
          x-go-name: MaxFails
        strategy:
          type: string
          x-go-name: Strategy
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - failTimeout
        - maxFails
        - strategy
      x-apifox-folder: ''
    SDConfig:
      properties:
        name:
          type: string
          x-go-name: Name
        plugin: &ref_2
          $ref: '#/components/schemas/PluginConfig'
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - name
        - plugin
      x-apifox-folder: ''
    RouterRouteConfig:
      properties:
        gateway:
          type: string
          x-go-name: Gateway
        net:
          type: string
          x-go-name: Net
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - gateway
        - net
      x-apifox-folder: ''
    RouterConfig:
      properties:
        file: &ref_6
          $ref: '#/components/schemas/FileLoader'
        http: &ref_7
          $ref: '#/components/schemas/HTTPLoader'
        name:
          type: string
          x-go-name: Name
        plugin: *ref_2
        redis: &ref_8
          $ref: '#/components/schemas/RedisLoader'
        reload: *ref_1
        routes:
          items:
            $ref: '#/components/schemas/RouterRouteConfig'
          type: array
          x-go-name: Routes
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - file
        - http
        - name
        - plugin
        - redis
        - reload
        - routes
      x-apifox-folder: ''
    ResolverConfig:
      properties:
        name:
          type: string
          x-go-name: Name
        nameservers:
          items:
            $ref: '#/components/schemas/NameserverConfig'
          type: array
          x-go-name: Nameservers
        plugin: *ref_2
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - name
        - nameservers
        - plugin
      x-apifox-folder: ''
    RedisRecorder:
      properties:
        addr:
          type: string
          x-go-name: Addr
        db:
          format: int64
          type: integer
          x-go-name: DB
        key:
          type: string
          x-go-name: Key
        password:
          type: string
          x-go-name: Password
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - db
        - key
        - password
        - type
      x-apifox-folder: ''
    RedisLoader:
      properties:
        addr:
          type: string
          x-go-name: Addr
        db:
          format: int64
          type: integer
          x-go-name: DB
        key:
          type: string
          x-go-name: Key
        password:
          type: string
          x-go-name: Password
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - db
        - key
        - password
        - type
      x-apifox-folder: ''
    RecorderObject:
      properties:
        Metadata:
          additionalProperties:
            type: string
          type: object
          x-apifox-orders: []
        name:
          type: string
          x-go-name: Name
        record:
          type: string
          x-go-name: Record
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - Metadata
        - name
        - record
      x-apifox-folder: ''
    RecorderConfig:
      properties:
        file:
          $ref: '#/components/schemas/FileRecorder'
        http:
          $ref: '#/components/schemas/HTTPRecorder'
        name:
          type: string
          x-go-name: Name
        plugin: *ref_2
        redis:
          $ref: '#/components/schemas/RedisRecorder'
        tcp:
          $ref: '#/components/schemas/TCPRecorder'
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - file
        - http
        - name
        - plugin
        - redis
        - tcp
      x-apifox-folder: ''
    ProfilingConfig:
      properties:
        addr:
          type: string
          x-go-name: Addr
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
      x-apifox-folder: ''
    PluginConfig:
      properties:
        addr:
          type: string
          x-go-name: Addr
        timeout: *ref_1
        tls: &ref_5
          $ref: '#/components/schemas/TLSConfig'
        token:
          type: string
          x-go-name: Token
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - timeout
        - tls
        - token
        - type
      x-apifox-folder: ''
    NodeConfig:
      properties:
        addr:
          type: string
          x-go-name: Addr
        auth: &ref_4
          $ref: '#/components/schemas/AuthConfig'
        bypass:
          type: string
          x-go-name: Bypass
        bypasses:
          items:
            type: string
          type: array
          x-go-name: Bypasses
        connector:
          $ref: '#/components/schemas/ConnectorConfig'
        dialer:
          $ref: '#/components/schemas/DialerConfig'
        host:
          type: string
          x-go-name: Host
        hosts:
          type: string
          x-go-name: Hosts
        http: &ref_11
          $ref: '#/components/schemas/HTTPNodeConfig'
        interface:
          type: string
          x-go-name: Interface
        metadata:
          additionalProperties:
            type: string
          type: object
          x-go-name: Metadata
          x-apifox-orders: []
        name:
          type: string
          x-go-name: Name
        network:
          type: string
          x-go-name: Network
        path:
          type: string
          x-go-name: Path
        protocol:
          type: string
          x-go-name: Protocol
        resolver:
          type: string
          x-go-name: Resolver
        sockopts: *ref_3
        tls: &ref_12
          $ref: '#/components/schemas/TLSNodeConfig'
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - auth
        - bypass
        - bypasses
        - connector
        - dialer
        - host
        - hosts
        - http
        - interface
        - metadata
        - name
        - network
        - path
        - protocol
        - resolver
        - sockopts
        - tls
      x-apifox-folder: ''
    NameserverConfig:
      properties:
        addr:
          type: string
          x-go-name: Addr
        async:
          type: boolean
          x-go-name: Async
        chain:
          type: string
          x-go-name: Chain
        clientIP:
          type: string
          x-go-name: ClientIP
        hostname:
          type: string
          x-go-name: Hostname
        only:
          type: string
          x-go-name: Only
        prefer:
          type: string
          x-go-name: Prefer
        timeout: *ref_1
        ttl: *ref_1
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - async
        - chain
        - clientIP
        - hostname
        - only
        - prefer
        - timeout
        - ttl
      x-apifox-folder: ''
    MetricsConfig:
      properties:
        addr:
          type: string
          x-go-name: Addr
        auth: *ref_4
        auther:
          type: string
          x-go-name: Auther
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - auth
        - auther
        - path
      x-apifox-folder: ''
    LogRotationConfig:
      properties:
        compress:
          description: |-
            Compress determines if the rotated log files should be compressed
            using gzip. The default is not to perform compression.
          type: boolean
          x-go-name: Compress
        localTime:
          description: >-
            LocalTime determines if the time used for formatting the timestamps
            in

            backup files is the computer's local time. The default is to use UTC

            time.
          type: boolean
          x-go-name: LocalTime
        maxAge:
          description: >-
            MaxAge is the maximum number of days to retain old log files based
            on the

            timestamp encoded in their filename.  Note that a day is defined as
            24

            hours and may not exactly correspond to calendar days due to
            daylight

            savings, leap seconds, etc. The default is not to remove old log
            files

            based on age.
          format: int64
          type: integer
          x-go-name: MaxAge
        maxBackups:
          description: >-
            MaxBackups is the maximum number of old log files to retain.  The
            default

            is to retain all old log files (though MaxAge may still cause them
            to get

            deleted.)
          format: int64
          type: integer
          x-go-name: MaxBackups
        maxSize:
          description: >-
            MaxSize is the maximum size in megabytes of the log file before it
            gets

            rotated. It defaults to 100 megabytes.
          format: int64
          type: integer
          x-go-name: MaxSize
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - compress
        - localTime
        - maxAge
        - maxBackups
        - maxSize
      x-apifox-folder: ''
    LogConfig:
      properties:
        format:
          type: string
          x-go-name: Format
        level:
          type: string
          x-go-name: Level
        output:
          type: string
          x-go-name: Output
        rotation:
          $ref: '#/components/schemas/LogRotationConfig'
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - format
        - level
        - output
        - rotation
      x-apifox-folder: ''
    ListenerConfig:
      properties:
        auth: *ref_4
        auther:
          type: string
          x-go-name: Auther
        authers:
          items:
            type: string
          type: array
          x-go-name: Authers
        chain:
          type: string
          x-go-name: Chain
        chainGroup: &ref_9
          $ref: '#/components/schemas/ChainGroupConfig'
        metadata:
          additionalProperties:
            type: string
          type: object
          x-go-name: Metadata
          x-apifox-orders: []
        tls: *ref_5
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - auth
        - auther
        - authers
        - chain
        - chainGroup
        - metadata
        - tls
        - type
      x-apifox-folder: ''
    LimiterConfig:
      properties:
        file: *ref_6
        http: *ref_7
        limits:
          items:
            type: string
          type: array
          x-go-name: Limits
        name:
          type: string
          x-go-name: Name
        plugin: *ref_2
        redis: *ref_8
        reload: *ref_1
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - file
        - http
        - limits
        - name
        - plugin
        - redis
        - reload
      x-apifox-folder: ''
    IngressRuleConfig:
      properties:
        endpoint:
          type: string
          x-go-name: Endpoint
        hostname:
          type: string
          x-go-name: Hostname
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - endpoint
        - hostname
      x-apifox-folder: ''
    IngressConfig:
      properties:
        file: *ref_6
        http: *ref_7
        name:
          type: string
          x-go-name: Name
        plugin: *ref_2
        redis: *ref_8
        reload: *ref_1
        rules:
          items:
            $ref: '#/components/schemas/IngressRuleConfig'
          type: array
          x-go-name: Rules
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - file
        - http
        - name
        - plugin
        - redis
        - reload
        - rules
      x-apifox-folder: ''
    HostsConfig:
      properties:
        file: *ref_6
        http: *ref_7
        mappings:
          items:
            $ref: '#/components/schemas/HostMappingConfig'
          type: array
          x-go-name: Mappings
        name:
          type: string
          x-go-name: Name
        plugin: *ref_2
        redis: *ref_8
        reload: *ref_1
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - file
        - http
        - mappings
        - name
        - plugin
        - redis
        - reload
      x-apifox-folder: ''
    HostMappingConfig:
      properties:
        aliases:
          items:
            type: string
          type: array
          x-go-name: Aliases
        hostname:
          type: string
          x-go-name: Hostname
        ip:
          type: string
          x-go-name: IP
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - aliases
        - hostname
        - ip
      x-apifox-folder: ''
    HopConfig:
      properties:
        bypass:
          type: string
          x-go-name: Bypass
        bypasses:
          items:
            type: string
          type: array
          x-go-name: Bypasses
        file: *ref_6
        hosts:
          type: string
          x-go-name: Hosts
        http: *ref_7
        interface:
          type: string
          x-go-name: Interface
        name:
          type: string
          x-go-name: Name
        nodes:
          items:
            $ref: '#/components/schemas/NodeConfig'
          type: array
          x-go-name: Nodes
        plugin: *ref_2
        redis: *ref_8
        reload: *ref_1
        resolver:
          type: string
          x-go-name: Resolver
        selector: &ref_10
          $ref: '#/components/schemas/SelectorConfig'
        sockopts: *ref_3
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - bypass
        - bypasses
        - file
        - hosts
        - http
        - interface
        - name
        - nodes
        - plugin
        - redis
        - reload
        - resolver
        - selector
        - sockopts
      x-apifox-folder: ''
    HandlerConfig:
      properties:
        auth: *ref_4
        auther:
          type: string
          x-go-name: Auther
        authers:
          items:
            type: string
          type: array
          x-go-name: Authers
        chain:
          type: string
          x-go-name: Chain
        chainGroup: *ref_9
        limiter:
          type: string
          x-go-name: Limiter
        metadata:
          additionalProperties:
            type: string
          type: object
          x-go-name: Metadata
          x-apifox-orders: []
        retries:
          format: int64
          type: integer
          x-go-name: Retries
        tls: *ref_5
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - auth
        - auther
        - authers
        - chain
        - chainGroup
        - limiter
        - metadata
        - retries
        - tls
        - type
      x-apifox-folder: ''
    HTTPRecorder:
      properties:
        timeout: *ref_1
        url:
          type: string
          x-go-name: URL
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - timeout
        - url
      x-apifox-folder: ''
    HTTPNodeConfig:
      properties:
        header:
          additionalProperties:
            type: string
          type: object
          x-go-name: Header
          x-apifox-orders: []
        host:
          type: string
          x-go-name: Host
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - header
        - host
      x-apifox-folder: ''
    HTTPLoader:
      properties:
        timeout: *ref_1
        url:
          type: string
          x-go-name: URL
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - timeout
        - url
      x-apifox-folder: ''
    ForwarderConfig:
      properties:
        name:
          type: string
          x-go-name: Name
        nodes:
          items:
            $ref: '#/components/schemas/ForwardNodeConfig'
          type: array
          x-go-name: Nodes
        selector: *ref_10
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - name
        - nodes
        - selector
      x-apifox-folder: ''
    ForwardNodeConfig:
      properties:
        addr:
          type: string
          x-go-name: Addr
        auth: *ref_4
        bypass:
          type: string
          x-go-name: Bypass
        bypasses:
          items:
            type: string
          type: array
          x-go-name: Bypasses
        host:
          type: string
          x-go-name: Host
        http: *ref_11
        name:
          type: string
          x-go-name: Name
        network:
          type: string
          x-go-name: Network
        path:
          type: string
          x-go-name: Path
        protocol:
          type: string
          x-go-name: Protocol
        tls: *ref_12
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - addr
        - auth
        - bypass
        - bypasses
        - host
        - http
        - name
        - network
        - path
        - protocol
        - tls
      x-apifox-folder: ''
    FileRecorder:
      properties:
        path:
          type: string
          x-go-name: Path
        sep:
          type: string
          x-go-name: Sep
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - path
        - sep
      x-apifox-folder: ''
    FileLoader:
      properties:
        path:
          type: string
          x-go-name: Path
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - path
      x-apifox-folder: ''
    Duration:
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      type: integer
      x-go-package: time
      x-apifox-folder: ''
    DialerConfig:
      properties:
        auth: *ref_4
        metadata:
          additionalProperties:
            type: string
          type: object
          x-go-name: Metadata
          x-apifox-orders: []
        tls: *ref_5
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - auth
        - metadata
        - tls
        - type
      x-apifox-folder: ''
    ConnectorConfig:
      properties:
        auth: *ref_4
        metadata:
          additionalProperties:
            type: string
          type: object
          x-go-name: Metadata
          x-apifox-orders: []
        tls: *ref_5
        type:
          type: string
          x-go-name: Type
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - auth
        - metadata
        - tls
        - type
      x-apifox-folder: ''
    Config:
      properties:
        admissions:
          items:
            $ref: '#/components/schemas/AdmissionConfig'
          type: array
          x-go-name: Admissions
        api:
          $ref: '#/components/schemas/APIConfig'
        authers:
          items:
            $ref: '#/components/schemas/AutherConfig'
          type: array
          x-go-name: Authers
        bypasses:
          items:
            $ref: '#/components/schemas/BypassConfig'
          type: array
          x-go-name: Bypasses
        chains:
          items:
            $ref: '#/components/schemas/ChainConfig'
          type: array
          x-go-name: Chains
        climiters:
          items: &ref_13
            $ref: '#/components/schemas/LimiterConfig'
          type: array
          x-go-name: CLimiters
        hops:
          items: &ref_14
            $ref: '#/components/schemas/HopConfig'
          type: array
          x-go-name: Hops
        hosts:
          items:
            $ref: '#/components/schemas/HostsConfig'
          type: array
          x-go-name: Hosts
        ingresses:
          items:
            $ref: '#/components/schemas/IngressConfig'
          type: array
          x-go-name: Ingresses
        limiters:
          items: *ref_13
          type: array
          x-go-name: Limiters
        log:
          $ref: '#/components/schemas/LogConfig'
        metrics:
          $ref: '#/components/schemas/MetricsConfig'
        profiling:
          $ref: '#/components/schemas/ProfilingConfig'
        recorders:
          items:
            $ref: '#/components/schemas/RecorderConfig'
          type: array
          x-go-name: Recorders
        resolvers:
          items:
            $ref: '#/components/schemas/ResolverConfig'
          type: array
          x-go-name: Resolvers
        rlimiters:
          items: *ref_13
          type: array
          x-go-name: RLimiters
        routers:
          items:
            $ref: '#/components/schemas/RouterConfig'
          type: array
          x-go-name: Routers
        sds:
          items:
            $ref: '#/components/schemas/SDConfig'
          type: array
          x-go-name: SDs
        services:
          items:
            $ref: '#/components/schemas/ServiceConfig'
          type: array
          x-go-name: Services
        tls: *ref_5
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - admissions
        - api
        - authers
        - bypasses
        - chains
        - climiters
        - hops
        - hosts
        - ingresses
        - limiters
        - log
        - metrics
        - profiling
        - recorders
        - resolvers
        - rlimiters
        - routers
        - sds
        - services
        - tls
      x-apifox-folder: ''
    ChainGroupConfig:
      properties:
        chains:
          items:
            type: string
          type: array
          x-go-name: Chains
        selector: *ref_10
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - chains
        - selector
      x-apifox-folder: ''
    ChainConfig:
      properties:
        hops:
          items: *ref_14
          type: array
          x-go-name: Hops
        metadata:
          additionalProperties:
            type: string
          type: object
          x-go-name: Metadata
          x-apifox-orders: []
        name:
          type: string
          x-go-name: Name
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - hops
        - metadata
        - name
      x-apifox-folder: ''
    BypassConfig:
      properties:
        file: *ref_6
        http: *ref_7
        matchers:
          items:
            type: string
          type: array
          x-go-name: Matchers
        name:
          type: string
          x-go-name: Name
        plugin: *ref_2
        redis: *ref_8
        reload: *ref_1
        reverse:
          description: DEPRECATED by whitelist since beta.4
          type: boolean
          x-go-name: Reverse
        whitelist:
          type: boolean
          x-go-name: Whitelist
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - file
        - http
        - matchers
        - name
        - plugin
        - redis
        - reload
        - reverse
        - whitelist
      x-apifox-folder: ''
    AutherConfig:
      properties:
        auths:
          items: *ref_4
          type: array
          x-go-name: Auths
        file: *ref_6
        http: *ref_7
        name:
          type: string
          x-go-name: Name
        plugin: *ref_2
        redis: *ref_8
        reload: *ref_1
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - auths
        - file
        - http
        - name
        - plugin
        - redis
        - reload
      x-apifox-folder: ''
    AuthConfig:
      properties:
        password:
          type: string
          x-go-name: Password
        username:
          type: string
          x-go-name: Username
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - password
        - username
      x-apifox-folder: ''
    AdmissionConfig:
      properties:
        file: *ref_6
        http: *ref_7
        matchers:
          items:
            type: string
          type: array
          x-go-name: Matchers
        name:
          type: string
          x-go-name: Name
        plugin: *ref_2
        redis: *ref_8
        reload: *ref_1
        reverse:
          description: DEPRECATED by whitelist since beta.4
          type: boolean
          x-go-name: Reverse
        whitelist:
          type: boolean
          x-go-name: Whitelist
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - file
        - http
        - matchers
        - name
        - plugin
        - redis
        - reload
        - reverse
        - whitelist
      x-apifox-folder: ''
    APIConfig:
      properties:
        accesslog:
          type: boolean
          x-go-name: AccessLog
        addr:
          type: string
          x-go-name: Addr
        auth: *ref_4
        auther:
          type: string
          x-go-name: Auther
        pathPrefix:
          type: string
          x-go-name: PathPrefix
      type: object
      x-go-package: github.com/go-gost/x/config
      x-apifox-orders:
        - accesslog
        - addr
        - auth
        - auther
        - pathPrefix
      x-apifox-folder: ''
  securitySchemes:
    apikey-header-Authorization:
      type: apiKey
      in: header
      name: Authorization
servers:
  - url: http://127.0.0.1:30898
    description: Prod Env
security:
  - apikey-header-Authorization: []

```
